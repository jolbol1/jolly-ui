{
  "name": "date-picker",
  "dependencies": [
    "react-aria-components"
  ],
  "registryDependencies": [
    "field",
    "popover",
    "button",
    "calendar",
    "datefield",
    "field"
  ],
  "files": [
    {
      "name": "date-picker.tsx",
      "content": "import { CalendarIcon } from \"@radix-ui/react-icons\"\nimport {\n  DatePicker as AriaDatePicker,\n  DatePickerProps as AriaDatePickerProps,\n  DateRangePicker as AriaDateRangePicker,\n  DateRangePickerProps as AriaDateRangePickerProps,\n  DateValue as AriaDateValue,\n  Dialog as AriaDialog,\n  DialogProps as AriaDialogProps,\n  PopoverProps as AriaPopoverProps,\n  ValidationResult as AriaValidationResult,\n  composeRenderProps,\n  Text,\n} from \"react-aria-components\"\n\nimport { cn } from \"@/lib/utils\"\nimport { FieldGroup } from \"@/registry/new-york/ui/field\"\nimport { Popover } from \"@/registry/new-york/ui/popover\"\n\nimport { Button } from \"./button\"\nimport {\n  Calendar,\n  CalendarCell,\n  CalendarGrid,\n  CalendarGridBody,\n  CalendarGridHeader,\n  CalendarHeaderCell,\n  CalendarHeading,\n  RangeCalendar,\n} from \"./calendar\"\nimport { DateInput } from \"./datefield\"\nimport { FieldError, Label } from \"./field\"\n\nconst DatePicker = AriaDatePicker\n\nconst DateRangePicker = AriaDateRangePicker\n\nconst DatePickerContent = ({\n  className,\n  popoverClassName,\n  ...props\n}: AriaDialogProps & { popoverClassName?: AriaPopoverProps[\"className\"] }) => (\n  <Popover\n    className={composeRenderProps(popoverClassName, (className) =>\n      cn(\"w-auto p-3\", className)\n    )}\n  >\n    <AriaDialog\n      className={cn(\n        \"flex w-full flex-col space-y-4 outline-none sm:flex-row sm:space-x-4 sm:space-y-0\",\n        className\n      )}\n      {...props}\n    />\n  </Popover>\n)\n\ninterface JollyDatePickerProps<T extends AriaDateValue>\n  extends AriaDatePickerProps<T> {\n  label?: string\n  description?: string\n  errorMessage?: string | ((validation: AriaValidationResult) => string)\n}\n\nfunction JollyDatePicker<T extends AriaDateValue>({\n  label,\n  description,\n  errorMessage,\n  className,\n  ...props\n}: JollyDatePickerProps<T>) {\n  return (\n    <DatePicker\n      className={composeRenderProps(className, (className) =>\n        cn(\"group flex flex-col gap-2\", className)\n      )}\n      {...props}\n    >\n      <Label>{label}</Label>\n      <FieldGroup>\n        <DateInput className=\"flex-1\" variant=\"ghost\" />\n        <Button\n          variant=\"ghost\"\n          size=\"icon\"\n          className=\"mr-1 size-6 data-[focus-visible]:ring-offset-0\"\n        >\n          <CalendarIcon aria-hidden className=\"size-4\" />\n        </Button>\n      </FieldGroup>\n      {description && (\n        <Text className=\"text-sm text-muted-foreground\" slot=\"description\">\n          {description}\n        </Text>\n      )}\n      <FieldError>{errorMessage}</FieldError>\n      <DatePickerContent>\n        <Calendar>\n          <CalendarHeading />\n          <CalendarGrid>\n            <CalendarGridHeader>\n              {(day) => <CalendarHeaderCell>{day}</CalendarHeaderCell>}\n            </CalendarGridHeader>\n            <CalendarGridBody>\n              {(date) => <CalendarCell date={date} />}\n            </CalendarGridBody>\n          </CalendarGrid>\n        </Calendar>\n      </DatePickerContent>\n    </DatePicker>\n  )\n}\n\ninterface JollyDateRangePickerProps<T extends AriaDateValue>\n  extends AriaDateRangePickerProps<T> {\n  label?: string\n  description?: string\n  errorMessage?: string | ((validation: AriaValidationResult) => string)\n}\n\nfunction JollyDateRangePicker<T extends AriaDateValue>({\n  label,\n  description,\n  errorMessage,\n  className,\n  ...props\n}: JollyDateRangePickerProps<T>) {\n  return (\n    <DateRangePicker\n      className={composeRenderProps(className, (className) =>\n        cn(\"group flex flex-col gap-2\", className)\n      )}\n      {...props}\n    >\n      <Label>{label}</Label>\n      <FieldGroup>\n        <DateInput variant=\"ghost\" slot={\"start\"} />\n        <span aria-hidden className=\"px-2 text-sm text-muted-foreground\">\n          -\n        </span>\n        <DateInput className=\"flex-1\" variant=\"ghost\" slot={\"end\"} />\n\n        <Button\n          variant=\"ghost\"\n          size=\"icon\"\n          className=\"mr-1 size-6 data-[focus-visible]:ring-offset-0\"\n        >\n          <CalendarIcon aria-hidden className=\"size-4\" />\n        </Button>\n      </FieldGroup>\n      {description && (\n        <Text className=\"text-sm text-muted-foreground\" slot=\"description\">\n          {description}\n        </Text>\n      )}\n      <FieldError>{errorMessage}</FieldError>\n      <DatePickerContent>\n        <RangeCalendar>\n          <CalendarHeading />\n          <CalendarGrid>\n            <CalendarGridHeader>\n              {(day) => <CalendarHeaderCell>{day}</CalendarHeaderCell>}\n            </CalendarGridHeader>\n            <CalendarGridBody>\n              {(date) => <CalendarCell date={date} />}\n            </CalendarGridBody>\n          </CalendarGrid>\n        </RangeCalendar>\n      </DatePickerContent>\n    </DateRangePicker>\n  )\n}\n\nexport {\n  DatePicker,\n  DatePickerContent,\n  DateRangePicker,\n  JollyDatePicker,\n  JollyDateRangePicker,\n}\nexport type { JollyDatePickerProps, JollyDateRangePickerProps }\n"
    }
  ],
  "type": "components:ui"
}