{
  "name": "tag-group",
  "dependencies": [
    "react-aria-components"
  ],
  "files": [
    {
      "name": "tag-group.tsx",
      "content": "import { cva } from \"class-variance-authority\"\r\nimport { XIcon } from \"lucide-react\"\r\nimport {\r\n  Button as AriaButton,\r\n  Tag as AriaTag,\r\n  TagGroup as AriaTagGroup,\r\n  TagList as AriaTagList,\r\n  TagListProps as AriaTagListProps,\r\n  TagProps as AriaTagProps,\r\n  composeRenderProps,\r\n} from \"react-aria-components\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst TagGroup = AriaTagGroup\r\n\r\nfunction TagList<T extends object>({\r\n  className,\r\n  ...props\r\n}: AriaTagListProps<T>) {\r\n  return (\r\n    <AriaTagList\r\n      className={composeRenderProps(className, (className) =>\r\n        cn(\"flex flex-wrap gap-2\", className)\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nconst badgeVariants = cva(\r\n  [\r\n    \"inline-flex items-center gap-2 rounded-full border px-2.5 py-0.5 text-xs font-semibold ring-offset-background transition-colors\",\r\n    /* Focus */\r\n    \"data-[focused]:outline-none data-[focused]:ring-2 data-[focused]:ring-ring data-[focused]:ring-offset-2\",\r\n  ],\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: [\r\n          \"border-transparent bg-primary text-primary-foreground\",\r\n          /* Hover */\r\n          \"data-[hovered]:bg-primary/80\",\r\n        ],\r\n        secondary: [\r\n          \"border-transparent bg-secondary text-secondary-foreground\",\r\n          /* Hover */\r\n          \"data-[hovered]:bg-secondary/80\",\r\n        ],\r\n        destructive: [\r\n          \"border-transparent bg-destructive text-destructive-foreground\",\r\n          /* Hover */\r\n          \"data-[hovered]:bg-destructive/80\",\r\n        ],\r\n        outline: \"text-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nfunction Tag({ children, className, ...props }: AriaTagProps) {\r\n  let textValue = typeof children === \"string\" ? children : undefined\r\n  return (\r\n    <AriaTag\r\n      textValue={textValue}\r\n      className={composeRenderProps(className, (className, renderProps) =>\r\n        cn(\r\n          badgeVariants({\r\n            variant:\r\n              renderProps.selectionMode === \"none\" || renderProps.isSelected\r\n                ? \"default\"\r\n                : \"secondary\",\r\n          }),\r\n          renderProps.allowsRemoving && \"pr-1\",\r\n          className\r\n        )\r\n      )}\r\n      {...props}\r\n    >\r\n      {composeRenderProps(children, (children, renderProps) => (\r\n        <>\r\n          {children}\r\n          {renderProps.allowsRemoving && (\r\n            <AriaButton\r\n              slot=\"remove\"\r\n              className={cn(\r\n                \"rounded-sm opacity-70 ring-offset-background transition-opacity\",\r\n                /* Hover */\r\n                \"data-[hovered]:opacity-100\",\r\n                /* Resets */\r\n                \"focus-visible:outline-none\",\r\n                className\r\n              )}\r\n            >\r\n              <XIcon aria-hidden className=\"size-3\" />\r\n            </AriaButton>\r\n          )}\r\n        </>\r\n      ))}\r\n    </AriaTag>\r\n  )\r\n}\r\n\r\nexport { TagGroup, TagList, Tag, badgeVariants }\r\n"
    }
  ],
  "type": "components:ui"
}