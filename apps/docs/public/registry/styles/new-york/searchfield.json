{
  "name": "searchfield",
  "dependencies": [
    "react-aria-components"
  ],
  "registryDependencies": [
    "field"
  ],
  "files": [
    {
      "name": "searchfield.tsx",
      "content": "import { Cross2Icon, MagnifyingGlassIcon } from \"@radix-ui/react-icons\"\nimport {\n  Button as AriaButton,\n  ButtonProps as AriaButtonProps,\n  Group as AriaGroup,\n  GroupProps as AriaGroupProps,\n  Input as AriaInput,\n  InputProps as AriaInputProps,\n  SearchField as AriaSearchField,\n  SearchFieldProps as AriaSearchFieldProps,\n  ValidationResult as AriaValidationResult,\n  composeRenderProps,\n  Text,\n} from \"react-aria-components\"\n\nimport { cn } from \"@/lib/utils\"\n\nimport { FieldError, FieldGroup, Label } from \"./field\"\n\nfunction SearchField({ className, ...props }: AriaSearchFieldProps) {\n  return (\n    <AriaSearchField\n      className={composeRenderProps(className, (className) =>\n        cn(\"group\", className)\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SearchFieldInput({ className, ...props }: AriaInputProps) {\n  return (\n    <AriaInput\n      className={composeRenderProps(className, (className) =>\n        cn(\n          \"min-w-0 flex-1 bg-background px-2 py-1.5 outline outline-0 placeholder:text-muted-foreground [&::-webkit-search-cancel-button]:hidden\",\n          className\n        )\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SearchFieldGroup({ className, ...props }: AriaGroupProps) {\n  return (\n    <AriaGroup\n      className={composeRenderProps(className, (className) =>\n        cn(\n          \"flex h-10 w-full items-center overflow-hidden rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background\",\n          /* Focus Within */\n          \"data-[focus-within]:outline-none data-[focus-within]:ring-2 data-[focus-within]:ring-ring data-[focus-within]:ring-offset-2\",\n          /* Disabled */\n          \"data-[disabled]:opacity-50\",\n          className\n        )\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SearchFieldClear({ className, ...props }: AriaButtonProps) {\n  return (\n    <AriaButton\n      className={composeRenderProps(className, (className) =>\n        cn(\n          \"mr-1 rounded-sm opacity-70 ring-offset-background transition-opacity\",\n          /* Hover */\n          \"data-[hovered]:opacity-100\",\n          /* Disabled */\n          \"data-[disabled]:pointer-events-none\",\n          /* Empty */\n          \"group-data-[empty]:invisible\",\n          className\n        )\n      )}\n      {...props}\n    />\n  )\n}\n\ninterface JollySearchFieldProps extends AriaSearchFieldProps {\n  label?: string\n  description?: string\n  errorMessage?: string | ((validation: AriaValidationResult) => string)\n}\n\nfunction JollySearchField({\n  label,\n  description,\n  className,\n  errorMessage,\n  ...props\n}: JollySearchFieldProps) {\n  return (\n    <SearchField\n      className={composeRenderProps(className, (className) =>\n        cn(\"group flex flex-col gap-2\", className)\n      )}\n      {...props}\n    >\n      <Label>{label}</Label>\n      <FieldGroup>\n        <MagnifyingGlassIcon\n          aria-hidden\n          className=\"size-4 text-muted-foreground\"\n        />\n        <SearchFieldInput placeholder=\"Search...\" />\n        <SearchFieldClear>\n          <Cross2Icon aria-hidden className=\"size-4\" />\n        </SearchFieldClear>\n      </FieldGroup>\n      {description && (\n        <Text className=\"text-sm text-muted-foreground\" slot=\"description\">\n          {description}\n        </Text>\n      )}\n      <FieldError>{errorMessage}</FieldError>\n    </SearchField>\n  )\n}\n\nexport {\n  SearchField,\n  SearchFieldGroup,\n  SearchFieldInput,\n  SearchFieldClear,\n  JollySearchField,\n}\nexport type { JollySearchFieldProps }\n"
    }
  ],
  "type": "components:ui"
}