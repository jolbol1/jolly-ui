{
  "name": "datefield",
  "dependencies": [
    "react-aria-components",
    "class-variance-authority"
  ],
  "registryDependencies": [
    "field"
  ],
  "files": [
    {
      "name": "datefield.tsx",
      "content": "import { VariantProps } from \"class-variance-authority\"\nimport {\n  DateField as AriaDateField,\n  DateFieldProps as AriaDateFieldProps,\n  DateInput as AriaDateInput,\n  DateInputProps as AriaDateInputProps,\n  DateSegment as AriaDateSegment,\n  DateSegmentProps as AriaDateSegmentProps,\n  DateValue as AriaDateValue,\n  TimeField as AriaTimeField,\n  TimeFieldProps as AriaTimeFieldProps,\n  TimeValue as AriaTimeValue,\n  ValidationResult as AriaValidationResult,\n  composeRenderProps,\n  Text,\n} from \"react-aria-components\"\n\nimport { cn } from \"@/lib/utils\"\n\nimport { FieldError, fieldGroupVariants, Label } from \"./field\"\n\nconst DateField = AriaDateField\n\nconst TimeField = AriaTimeField\n\nfunction DateSegment({ className, ...props }: AriaDateSegmentProps) {\n  return (\n    <AriaDateSegment\n      className={composeRenderProps(className, (className) =>\n        cn(\n          \"type-literal:px-0 inline rounded p-0.5 caret-transparent outline outline-0\",\n          /* Placeholder */\n          \"data-[placeholder]:text-muted-foreground\",\n          /* Disabled */\n          \"data-[disabled]:cursor-not-allowed data-[disabled]:opacity-50\",\n          /* Focused */\n          \"data-[focused]:bg-accent data-[focused]:text-accent-foreground\",\n          /* Invalid */\n          \"data-[invalid]:data-[focused]:bg-destructive data-[invalid]:data-[focused]:data-[placeholder]:text-destructive-foreground data-[invalid]:data-[focused]:text-destructive-foreground data-[invalid]:data-[placeholder]:text-destructive data-[invalid]:text-destructive\",\n          className\n        )\n      )}\n      {...props}\n    />\n  )\n}\n\ninterface DateInputProps\n  extends AriaDateInputProps,\n    VariantProps<typeof fieldGroupVariants> {}\n\nfunction DateInput({\n  className,\n  variant,\n  ...props\n}: Omit<DateInputProps, \"children\">) {\n  return (\n    <AriaDateInput\n      className={composeRenderProps(className, (className) =>\n        cn(fieldGroupVariants({ variant }), \"text-sm\", className)\n      )}\n      {...props}\n    >\n      {(segment) => <DateSegment segment={segment} />}\n    </AriaDateInput>\n  )\n}\n\ninterface JollyDateFieldProps<T extends AriaDateValue>\n  extends AriaDateFieldProps<T> {\n  label?: string\n  description?: string\n  errorMessage?: string | ((validation: AriaValidationResult) => string)\n}\n\nfunction JollyDateField<T extends AriaDateValue>({\n  label,\n  description,\n  className,\n  errorMessage,\n  ...props\n}: JollyDateFieldProps<T>) {\n  return (\n    <DateField\n      className={composeRenderProps(className, (className) =>\n        cn(\"group flex flex-col gap-2\", className)\n      )}\n      {...props}\n    >\n      <Label>{label}</Label>\n      <DateInput />\n      {description && (\n        <Text className=\"text-sm text-muted-foreground\" slot=\"description\">\n          {description}\n        </Text>\n      )}\n      <FieldError>{errorMessage}</FieldError>\n    </DateField>\n  )\n}\n\ninterface JollyTimeFieldProps<T extends AriaTimeValue>\n  extends AriaTimeFieldProps<T> {\n  label?: string\n  description?: string\n  errorMessage?: string | ((validation: AriaValidationResult) => string)\n}\n\nfunction JollyTimeField<T extends AriaTimeValue>({\n  label,\n  description,\n  errorMessage,\n  className,\n  ...props\n}: JollyTimeFieldProps<T>) {\n  return (\n    <TimeField\n      className={composeRenderProps(className, (className) =>\n        cn(\"group flex flex-col gap-2\", className)\n      )}\n      {...props}\n    >\n      <Label>{label}</Label>\n      <DateInput />\n      {description && <Text slot=\"description\">{description}</Text>}\n      <FieldError>{errorMessage}</FieldError>\n    </TimeField>\n  )\n}\n\nexport {\n  DateField,\n  DateSegment,\n  DateInput,\n  TimeField,\n  JollyDateField,\n  JollyTimeField,\n}\nexport type { DateInputProps, JollyDateFieldProps, JollyTimeFieldProps }\n"
    }
  ],
  "type": "components:ui"
}