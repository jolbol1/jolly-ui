{
  "name": "dialog",
  "dependencies": [
    "react-aria-components",
    "class-variance-authority"
  ],
  "files": [
    {
      "name": "dialog.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\nimport {\n  Button as AriaButton,\n  Dialog as AriaDialog,\n  DialogProps as AriaDialogProps,\n  DialogTrigger as AriaDialogTrigger,\n  Heading as AriaHeading,\n  HeadingProps as AriaHeadingProps,\n  Modal as AriaModal,\n  ModalOverlay as AriaModalOverlay,\n  ModalOverlayProps as AriaModalOverlayProps,\n  composeRenderProps,\n} from \"react-aria-components\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = AriaDialog\n\nconst sheetVariants = cva(\n  [\n    \"fixed z-50 gap-4 bg-background shadow-lg transition ease-in-out\",\n    /* Entering */\n    \"data-[entering]:duration-500 data-[entering]:animate-in\",\n    /* Exiting */\n    \"data-[exiting]:duration-300  data-[exiting]:animate-out\",\n  ],\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[entering]:slide-in-from-top data-[exiting]:slide-out-to-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[entering]:slide-in-from-bottom data-[exiting]:slide-out-to-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[entering]:slide-in-from-left data-[exiting]:slide-out-to-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[entering]:slide-in-from-right data-[exiting]:slide-out-to-right sm:max-w-sm\",\n      },\n    },\n  }\n)\n\nconst DialogTrigger = AriaDialogTrigger\n\nconst DialogOverlay = ({\n  className,\n  isDismissable = true,\n  ...props\n}: AriaModalOverlayProps) => (\n  <AriaModalOverlay\n    isDismissable={isDismissable}\n    className={composeRenderProps(className, (className) =>\n      cn(\n        \"fixed inset-0 z-50 bg-black/80\",\n        /* Exiting */\n        \"data-[exiting]:duration-300 data-[exiting]:animate-out data-[exiting]:fade-out-0\",\n        /* Entering */\n        \"data-[entering]:animate-in data-[entering]:fade-in-0\",\n        className\n      )\n    )}\n    {...props}\n  />\n)\n\ninterface DialogContentProps\n  extends Omit<React.ComponentProps<typeof AriaModal>, \"children\">,\n    VariantProps<typeof sheetVariants> {\n  children?: AriaDialogProps[\"children\"]\n  role?: AriaDialogProps[\"role\"]\n  closeButton?: boolean\n}\n\nconst DialogContent = ({\n  className,\n  children,\n  side,\n  role,\n  closeButton = true,\n  ...props\n}: DialogContentProps) => (\n  <AriaModal\n    className={composeRenderProps(className, (className) =>\n      cn(\n        side\n          ? sheetVariants({ side, className: \"h-full p-6\" })\n          : \"fixed left-1/2 top-1/2 z-50 w-full max-w-lg -translate-x-1/2 -translate-y-1/2 border bg-background p-6 shadow-lg duration-200 data-[exiting]:duration-300 data-[entering]:animate-in data-[exiting]:animate-out data-[entering]:fade-in-0 data-[exiting]:fade-out-0 data-[entering]:zoom-in-95 data-[exiting]:zoom-out-95 data-[entering]:slide-in-from-left-1/2 data-[entering]:slide-in-from-top-[48%] data-[exiting]:slide-out-to-left-1/2 data-[exiting]:slide-out-to-top-[48%] sm:rounded-lg md:w-full\",\n        className\n      )\n    )}\n    {...props}\n  >\n    <AriaDialog\n      role={role}\n      className={cn(!side && \"grid h-full gap-4\", \"h-full outline-none\")}\n    >\n      {composeRenderProps(children, (children, renderProps) => (\n        <>\n          {children}\n          {closeButton && (\n            <AriaButton\n              onPress={renderProps.close}\n              className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity data-[disabled]:pointer-events-none data-[entering]:bg-accent data-[entering]:text-muted-foreground data-[hovered]:opacity-100 data-[focused]:outline-none data-[focused]:ring-2 data-[focused]:ring-ring data-[focused]:ring-offset-2\"\n            >\n              <X className=\"size-4\" />\n              <span className=\"sr-only\">Close</span>\n            </AriaButton>\n          )}\n        </>\n      ))}\n    </AriaDialog>\n  </AriaModal>\n)\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst DialogTitle = ({ className, ...props }: AriaHeadingProps) => (\n  <AriaHeading\n    slot=\"title\"\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst DialogDescription = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLParagraphElement>) => (\n  <p\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\n\nexport {\n  Dialog,\n  DialogOverlay,\n  DialogTrigger,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n}\nexport type { DialogContentProps }\n"
    }
  ],
  "type": "components:ui"
}