{
  "name": "button",
  "dependencies": [
    "react-aria-components",
    "class-variance-authority"
  ],
  "files": [
    {
      "name": "button.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport {\n  Button as AriaButton,\n  composeRenderProps,\n  type ButtonProps as AriaButtonProps,\n} from \"react-aria-components\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  [\n    \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors\",\n    /* Disabled */\n    \"data-[disabled]:pointer-events-none data-[disabled]:opacity-50 \",\n    /* Focus Visible */\n    \"data-[focus-visible]:outline-none data-[focus-visible]:ring-2 data-[focus-visible]:ring-ring data-[focus-visible]:ring-offset-2\",\n    /* Resets */\n    \"focus-visible:outline-none\",\n  ],\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground data-[hovered]:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground data-[hovered]:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background data-[hovered]:bg-accent data-[hovered]:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground data-[hovered]:bg-secondary/80\",\n        ghost: \"data-[hovered]:bg-accent data-[hovered]:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 data-[hovered]:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"size-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\ninterface ButtonProps\n  extends AriaButtonProps,\n    VariantProps<typeof buttonVariants> {}\n\nconst Button = ({ className, variant, size, ...props }: ButtonProps) => {\n  return (\n    <AriaButton\n      className={composeRenderProps(className, (className) =>\n        cn(\n          buttonVariants({\n            variant,\n            size,\n            className,\n          })\n        )\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\nexport type { ButtonProps }\n"
    }
  ],
  "type": "components:ui"
}