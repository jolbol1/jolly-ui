{
  "name": "menu",
  "dependencies": [
    "react-aria-components"
  ],
  "files": [
    {
      "name": "menu.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\nimport {\n  Header as AriaHeader,\n  Keyboard as AriaKeyboard,\n  Menu as AriaMenu,\n  MenuItem as AriaMenuItem,\n  MenuItemProps as AriaMenuItemProps,\n  MenuProps as AriaMenuProps,\n  MenuTrigger as AriaMenuTrigger,\n  Separator as AriaSeparator,\n  SeparatorProps as AriaSeparatorProps,\n  SubmenuTrigger as AriaSubmenuTrigger,\n  composeRenderProps,\n} from \"react-aria-components\"\n\nimport { cn } from \"@/lib/utils\"\n\nimport { ListBoxCollection, ListBoxSection } from \"./listbox\"\nimport { SelectPopover } from \"./select\"\n\nconst MenuTrigger = AriaMenuTrigger\n\nconst MenuSubTrigger = AriaSubmenuTrigger\n\nconst MenuSection = ListBoxSection\n\nconst MenuCollection = ListBoxCollection\n\nconst MenuPopover = SelectPopover\n\nconst Menu = <T extends object>({ className, ...props }: AriaMenuProps<T>) => (\n  <AriaMenu\n    className={cn(\n      \"max-h-[inherit] overflow-auto rounded-md p-1 outline outline-0 [clip-path:inset(0_0_0_0_round_calc(var(--radius)-2px))]\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst MenuItem = ({ children, className, ...props }: AriaMenuItemProps) => (\n  <AriaMenuItem\n    textValue={\n      props.textValue || (typeof children === \"string\" ? children : undefined)\n    }\n    className={composeRenderProps(className, (className) =>\n      cn(\n        \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors\",\n        /* Disabled */\n        \"data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n        /* Focused */\n        \"data-[focused]:bg-accent data-[focused]:text-accent-foreground \",\n        /* Selection Mode */\n        \"data-[selection-mode]:pl-8\",\n        className\n      )\n    )}\n    {...props}\n  >\n    {composeRenderProps(children, (children, renderProps) => (\n      <>\n        <span className=\"absolute left-2 flex size-4 items-center justify-center\">\n          {renderProps.isSelected && (\n            <>\n              {renderProps.selectionMode == \"single\" && (\n                <Circle className=\"size-2 fill-current\" />\n              )}\n              {renderProps.selectionMode == \"multiple\" && (\n                <Check className=\"size-4\" />\n              )}\n            </>\n          )}\n        </span>\n\n        {children}\n\n        {renderProps.hasSubmenu && <ChevronRight className=\"ml-auto size-4\" />}\n      </>\n    ))}\n  </AriaMenuItem>\n)\n\ninterface MenuHeaderProps extends React.ComponentProps<typeof AriaHeader> {\n  inset?: boolean\n  separator?: boolean\n}\n\nconst MenuHeader = ({\n  className,\n  inset,\n  separator = true,\n  ...props\n}: MenuHeaderProps) => (\n  <AriaHeader\n    className={cn(\n      \"px-3 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      separator && \"-mx-1 mb-1 border-b border-b-border pb-2.5\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst MenuSeparator = ({ className, ...props }: AriaSeparatorProps) => (\n  <AriaSeparator\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n)\n\nconst MenuKeyboard = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof AriaKeyboard>) => {\n  return (\n    <AriaKeyboard\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  MenuTrigger,\n  Menu,\n  MenuPopover,\n  MenuItem,\n  MenuHeader,\n  MenuSeparator,\n  MenuKeyboard,\n  MenuSection,\n  MenuSubTrigger,\n  MenuCollection,\n}\nexport type { MenuHeaderProps }\n"
    }
  ],
  "type": "components:ui"
}