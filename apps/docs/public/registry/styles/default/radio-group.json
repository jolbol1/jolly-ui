{
  "name": "radio-group",
  "dependencies": [
    "react-aria-components"
  ],
  "registryDependencies": [
    "field"
  ],
  "files": [
    {
      "name": "radio-group.tsx",
      "content": "\"use client\"\n\nimport { Circle } from \"lucide-react\"\nimport {\n  Radio as AriaRadio,\n  RadioGroup as AriaRadioGroup,\n  RadioGroupProps as AriaRadioGroupProps,\n  RadioProps as AriaRadioProps,\n  ValidationResult as AriaValidationResult,\n  composeRenderProps,\n  Text,\n} from \"react-aria-components\"\n\nimport { cn } from \"@/lib/utils\"\n\nimport { FieldError, Label, labelVariants } from \"./field\"\n\nconst RadioGroup = ({\n  className,\n  orientation = \"vertical\",\n  ...props\n}: AriaRadioGroupProps) => {\n  return (\n    <AriaRadioGroup\n      className={composeRenderProps(className, (className) =>\n        cn(\n          {\n            \"grid gap-2\": orientation === \"vertical\",\n            \"flex items-center gap-2\": orientation === \"horizontal\",\n          },\n          className\n        )\n      )}\n      {...props}\n    />\n  )\n}\n\nconst Radio = ({ className, children, ...props }: AriaRadioProps) => {\n  return (\n    <AriaRadio\n      className={composeRenderProps(className, (className) =>\n        cn(\n          \"group flex items-center gap-x-2\",\n          /* Disabled */\n          \"data-[disabled]:cursor-not-allowed data-[disabled]:opacity-70\",\n          labelVariants,\n          className\n        )\n      )}\n      {...props}\n    >\n      {composeRenderProps(children, (children, renderProps) => (\n        <>\n          <span\n            className={cn(\n              \"jolly-Radio flex aspect-square size-4 items-center justify-center rounded-full border border-primary text-primary ring-offset-background\",\n              /* Focus */\n              \"group-data-[focused]:outline-none\",\n              /* Focus Visible */\n              \"group-data-[focus-visible]:ring-2 group-data-[focus-visible]:ring-ring group-data-[focus-visible]:ring-offset-2\",\n              /* Disabled */\n              \"group-data-[disabled]:cursor-not-allowed group-data-[disabled]:opacity-50\",\n              /* Invalid */\n              \"group-data-[invalid]:border-destructive\"\n            )}\n          >\n            {renderProps.isSelected && (\n              <Circle className=\"size-2.5 fill-current text-current\" />\n            )}\n          </span>\n          {children}\n        </>\n      ))}\n    </AriaRadio>\n  )\n}\n\ninterface JollyRadioGroupProps extends AriaRadioGroupProps {\n  label?: string\n  description?: string\n  errorMessage?: string | ((validation: AriaValidationResult) => string)\n}\n\nfunction JollyRadioGroup({\n  label,\n  description,\n  className,\n  errorMessage,\n  children,\n  ...props\n}: JollyRadioGroupProps) {\n  return (\n    <RadioGroup\n      className={composeRenderProps(className, (className) =>\n        cn(\"group flex flex-col gap-2\", className)\n      )}\n      {...props}\n    >\n      {composeRenderProps(children, (children) => (\n        <>\n          <Label>{label}</Label>\n          {children}\n          {description && (\n            <Text slot=\"description\" className=\"text-sm text-muted-foreground\">\n              {description}\n            </Text>\n          )}\n          <FieldError>{errorMessage}</FieldError>\n        </>\n      ))}\n    </RadioGroup>\n  )\n}\n\nexport { RadioGroup, Radio, JollyRadioGroup }\nexport type { JollyRadioGroupProps }\n"
    }
  ],
  "type": "components:ui"
}