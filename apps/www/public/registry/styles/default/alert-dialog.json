{
  "name": "alert-dialog",
  "dependencies": [
    "@radix-ui/react-alert-dialog"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "name": "alert-dialog.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport {\n  Button,\n  Dialog,\n  Heading,\n  Modal,\n  Dialog as RaDialog,\n  DialogTrigger as RaDialogTrigger,\n  ModalOverlay as RaModalOverlay,\n} from \"react-aria-components\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/registry/default/ui/button-variants\"\n\nconst AlertDialogTrigger = RaDialogTrigger\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof RaModalOverlay>,\n  React.ComponentPropsWithoutRef<typeof RaModalOverlay>\n>(({ className, children, ...props }, ref) => (\n  <RaModalOverlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-background/80 backdrop-blur-sm data-[entering]:animate-in data-[exiting]:animate-out data-[entering]:fade-in-0 data-[exiting]:fade-out-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = \"AlertDialogOverlay\"\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof RaDialog>,\n  React.ComponentPropsWithoutRef<typeof RaDialog> & { modalClassName?: string }\n>(({ className, modalClassName, ...props }, ref) => (\n  <>\n    <AlertDialogOverlay />\n    <Modal\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50  w-full max-w-lg translate-x-[-50%] translate-y-[-50%]  border bg-background p-6 shadow-lg duration-200 data-[entering]:animate-in data-[exiting]:animate-out data-[entering]:fade-in-0 data-[exiting]:fade-out-0 data-[entering]:zoom-in-95 data-[exiting]:zoom-out-95 data-[entering]:slide-in-from-left-1/2 data-[entering]:slide-in-from-top-[48%] data-[exiting]:slide-out-to-left-1/2 data-[exiting]:slide-out-to-top-[48%] sm:rounded-lg md:w-full\",\n        modalClassName\n      )}\n    >\n      <Dialog\n        role=\"alertdialog\"\n        ref={ref}\n        {...props}\n        className={cn(\"grid gap-4 focus-visible:outline-none\", className)}\n      />\n    </Modal>\n  </>\n))\nAlertDialogContent.displayName = \"AlertDialogContent\"\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof Heading>,\n  React.ComponentPropsWithoutRef<typeof Heading>\n>(({ className, ...props }, ref) => (\n  <Heading\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = \"AlertDialogTitle\"\n\nconst AlertDialogDescription = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLParagraphElement>) => (\n  <p className={cn(\"text-sm text-muted-foreground\", className)} {...props} />\n)\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentPropsWithoutRef<typeof Button>\n>(({ className, ...props }, ref) => (\n  <Button ref={ref} className={cn(buttonVariants(), className)} {...props} />\n))\nAlertDialogAction.displayName = \"AlertDialogAction\"\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentPropsWithoutRef<typeof Button>\n>(({ className, ...props }, ref) => (\n  <Button\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = \"AlertDialogCancel\"\n\nexport {\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"
    }
  ],
  "type": "components:ui"
}