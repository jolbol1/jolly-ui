{
  "name": "radio-group",
  "dependencies": [
    "@radix-ui/react-radio-group"
  ],
  "files": [
    {
      "name": "radio-group.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { Circle } from \"lucide-react\"\nimport {\n  Radio as RaRadio,\n  RadioGroup as RaRadioGroup,\n} from \"react-aria-components\"\n\nimport { cnv } from \"@/lib/utils\"\n\nimport { labelVariants } from \"./label\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RaRadioGroup>,\n  React.ComponentPropsWithoutRef<typeof RaRadioGroup>\n>(({ className, ...props }, ref) => {\n  return (\n    <RaRadioGroup\n      className={(values) => cnv(values, \"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = \"RadioGroup\"\n\nconst Radio = React.forwardRef<\n  React.ElementRef<typeof RaRadio>,\n  React.ComponentPropsWithoutRef<typeof RaRadio> & { showRadio?: boolean }\n>(({ className, children, showRadio = true, ...props }, ref) => {\n  return (\n    <RaRadio\n      ref={ref}\n      className={(values) =>\n        cnv(\n          values,\n          \"group flex items-center data-[focused]:outline-none gap-x-2\",\n          labelVariants,\n          className\n        )\n      }\n      {...props}\n    >\n      {(values) => (\n        <>\n          {showRadio && (\n            <span className=\"flex aspect-square h-4 w-4 items-center justify-center rounded-full border border-primary ring-offset-background group-data-[disabled]:opacity-50 group-data-[focus-visible]:ring-2 group-data-[focus-visible]:ring-ring group-data-[focus-visible]:ring-offset-2\">\n              {values.isSelected && (\n                <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n              )}\n            </span>\n          )}\n          {typeof children === \"function\" ? children(values) : children}\n        </>\n      )}\n    </RaRadio>\n  )\n})\nRadio.displayName = \"Radio\"\n\nexport { RadioGroup, Radio }\n"
    }
  ],
  "type": "components:ui"
}