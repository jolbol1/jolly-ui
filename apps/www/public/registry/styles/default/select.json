{
  "name": "select",
  "dependencies": [
    "@radix-ui/react-select"
  ],
  "files": [
    {
      "name": "select.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { Check, ChevronDown } from \"lucide-react\"\nimport {\n  Button,\n  Header,\n  Item,\n  Label,\n  ListBox,\n  Popover,\n  Select as RaSelect,\n  SelectValue as RaSelectValue,\n  Section,\n  Separator,\n} from \"react-aria-components\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = RaSelect\n\nconst SelectGroup = Section\n\nconst SelectValue = RaSelectValue\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentPropsWithoutRef<typeof Button>\n>(({ className, children, ...props }, ref) => (\n  <Button\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <>\n      {children}\n      <ChevronDown aria-hidden=\"true\" className=\"h-4 w-4 opacity-50\" />\n    </>\n  </Button>\n))\nSelectTrigger.displayName = \"SelectTrigger\"\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof Header>,\n  React.ComponentPropsWithoutRef<typeof Header>\n>(({ className, ...props }, ref) => (\n  <Header\n    ref={ref}\n    className={cn(\" py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = \"SelectLabel\"\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof Item>,\n  React.ComponentPropsWithoutRef<typeof Item>\n>(({ className, children, ...props }, ref) => (\n  <Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    {({ isSelected }) => (\n      <>\n        {isSelected && (\n          <span className=\"absolute left-2 flex h-4 w-4 items-center justify-center\">\n            <Check className=\"h-4 w-4\" />\n          </span>\n        )}\n\n        {children}\n      </>\n    )}\n  </Item>\n))\nSelectItem.displayName = \"SelectItem\"\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentPropsWithoutRef<typeof Separator>\n>(({ className, ...props }, ref) => (\n  <Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = \"Separator\"\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof Popover>,\n  React.ComponentPropsWithoutRef<typeof Popover>\n>(({ className, offset = 0, children, ...props }, ref) => (\n  <Popover\n    offset={offset}\n    ref={ref}\n    className={cn(\n      \"relative z-50  min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[entering]:animate-in data-[exiting]:animate-out data-[entering]:fade-in-0 data-[exiting]:fade-out-0 data-[entering]:zoom-in-95 data-[exiting]:zoom-out-95 data-[placement=bottom]:slide-in-from-top-2 data-[placement=left]:slide-in-from-right-2 data-[placement=right]:slide-in-from-left-2 data-[placement=top]:slide-in-from-bottom-2\",\n      \"data-[placement=bottom]:translate-y-1 data-[placement=left]:-translate-x-1 data-[placement=right]:translate-x-1 data-[placement=top]:-translate-y-1\",\n      className\n    )}\n    {...props}\n  >\n    <ListBox className={cn(\"p-1\")}>{children}</ListBox>\n  </Popover>\n))\nSelectContent.displayName = \"SelectContent\"\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectContent,\n  SelectTrigger,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n}\n"
    }
  ],
  "type": "components:ui"
}