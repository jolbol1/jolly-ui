{
  "name": "select",
  "dependencies": [
    "@radix-ui/react-select"
  ],
  "files": [
    {
      "name": "select.tsx",
      "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { Check, ChevronDown } from \"lucide-react\"\r\nimport {\r\n  Button,\r\n  Header,\r\n  Item,\r\n  Label,\r\n  ListBox,\r\n  Popover,\r\n  Select as RaSelect,\r\n  SelectValue as RaSelectValue,\r\n  Section,\r\n  Separator,\r\n} from \"react-aria-components\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Select = RaSelect\r\n\r\nconst SelectGroup = Section\r\n\r\nconst SelectValue = RaSelectValue\r\n\r\nconst SelectTrigger = React.forwardRef<\r\n  React.ElementRef<typeof Button>,\r\n  React.ComponentPropsWithoutRef<typeof Button>\r\n>(({ className, children, ...props }, ref) => (\r\n  <Button\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <>\r\n      {children}\r\n      <ChevronDown aria-hidden=\"true\" className=\"h-4 w-4 opacity-50\" />\r\n    </>\r\n  </Button>\r\n))\r\nSelectTrigger.displayName = \"SelectTrigger\"\r\n\r\nconst SelectLabel = React.forwardRef<\r\n  React.ElementRef<typeof Header>,\r\n  React.ComponentPropsWithoutRef<typeof Header>\r\n>(({ className, ...props }, ref) => (\r\n  <Header\r\n    ref={ref}\r\n    className={cn(\" py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectLabel.displayName = \"SelectLabel\"\r\n\r\nconst SelectItem = React.forwardRef<\r\n  React.ElementRef<typeof Item>,\r\n  React.ComponentPropsWithoutRef<typeof Item>\r\n>(({ className, children, ...props }, ref) => (\r\n  <Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {({ isSelected }) => (\r\n      <>\r\n        {isSelected && (\r\n          <span className=\"absolute left-2 flex h-4 w-4 items-center justify-center\">\r\n            <Check className=\"h-4 w-4\" />\r\n          </span>\r\n        )}\r\n\r\n        {children}\r\n      </>\r\n    )}\r\n  </Item>\r\n))\r\nSelectItem.displayName = \"SelectItem\"\r\n\r\nconst SelectSeparator = React.forwardRef<\r\n  React.ElementRef<typeof Separator>,\r\n  React.ComponentPropsWithoutRef<typeof Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectSeparator.displayName = \"Separator\"\r\n\r\nconst SelectContent = React.forwardRef<\r\n  React.ElementRef<typeof Popover>,\r\n  React.ComponentPropsWithoutRef<typeof Popover>\r\n>(({ className, offset = 0, children, ...props }, ref) => (\r\n  <Popover\r\n    offset={offset}\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative z-50  min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[entering]:animate-in data-[exiting]:animate-out data-[entering]:fade-in-0 data-[exiting]:fade-out-0 data-[entering]:zoom-in-95 data-[exiting]:zoom-out-95 data-[placement=bottom]:slide-in-from-top-2 data-[placement=left]:slide-in-from-right-2 data-[placement=right]:slide-in-from-left-2 data-[placement=top]:slide-in-from-bottom-2\",\r\n      \"data-[placement=bottom]:translate-y-1 data-[placement=left]:-translate-x-1 data-[placement=right]:translate-x-1 data-[placement=top]:-translate-y-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ListBox className={cn(\"p-1\")}>{children}</ListBox>\r\n  </Popover>\r\n))\r\nSelectContent.displayName = \"SelectContent\"\r\n\r\nexport {\r\n  Select,\r\n  SelectGroup,\r\n  SelectValue,\r\n  SelectContent,\r\n  SelectTrigger,\r\n  SelectLabel,\r\n  SelectItem,\r\n  SelectSeparator,\r\n}\r\n"
    }
  ],
  "type": "components:ui"
}