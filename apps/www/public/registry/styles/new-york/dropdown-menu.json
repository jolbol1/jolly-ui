{
  "name": "dropdown-menu",
  "dependencies": [
    "@radix-ui/react-dropdown-menu"
  ],
  "files": [
    {
      "name": "dropdown-menu.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { CheckIcon, DotFilledIcon } from \"@radix-ui/react-icons\"\nimport {\n  Header,\n  Item,\n  Keyboard,\n  Menu,\n  MenuTrigger,\n  Popover,\n  Section,\n  Separator,\n} from \"react-aria-components\"\n\nimport { cn, cnv } from \"@/lib/utils\"\n\nconst DropdownMenuTrigger = MenuTrigger\n\nconst DropdownMenuSection = Section\n\nconst DropdownMenuPopover = React.forwardRef<\n  React.ElementRef<typeof Popover>,\n  React.ComponentPropsWithoutRef<typeof Popover>\n>(({ className, offset = 4, ...props }, ref) => (\n  <Popover\n    ref={ref}\n    offset={offset}\n    className={(values) =>\n      cnv(\n        values,\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md\",\n        \"data-[entering]:animate-in data-[exiting]:animate-out data-[entering]:fade-in-0 data-[exiting]:fade-out-0 data-[exiting]:zoom-out-95 data-[placement=bottom]:slide-in-from-top-2 data-[placement=left]:slide-in-from-right-2 data-[placement=right]:slide-in-from-left-2 data-[placement=top]:slide-in-from-bottom-2\"\n      )\n    }\n    {...props}\n  />\n))\nDropdownMenuPopover.displayName = \"DropdownMenuPopover\"\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof Menu>,\n  React.ComponentPropsWithoutRef<typeof Menu>\n>(({ className, ...props }, ref) => (\n  <Menu ref={ref} className={cn(\"outline-none\", className)} {...props} />\n))\nDropdownMenuContent.displayName = \"DropdownMenuContent\"\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof Item>,\n  React.ComponentPropsWithoutRef<typeof Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <Item\n    ref={ref}\n    className={(values) =>\n      cnv(\n        values,\n        \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n        inset && \"pl-8\",\n        className\n      )\n    }\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = \"DropdownMenuItem\"\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof Item>,\n  React.ComponentPropsWithoutRef<typeof Item>\n>(({ className, children, ...props }, ref) => (\n  <Item\n    ref={ref}\n    className={(values) =>\n      cnv(\n        values,\n        \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n        className\n      )\n    }\n    {...props}\n  >\n    {(values) => (\n      <>\n        <span className=\"absolute left-2 flex h-4 w-4 items-center justify-center\">\n          {values.isSelected && <CheckIcon className=\"h-4 w-4\" />}\n        </span>\n\n        {typeof children === \"function\" ? children(values) : children}\n      </>\n    )}\n  </Item>\n))\nDropdownMenuCheckboxItem.displayName = \"DropdownMenuCheckboxItem\"\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof Item>,\n  React.ComponentPropsWithoutRef<typeof Item>\n>(({ className, children, ...props }, ref) => (\n  <Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    {(values) => (\n      <>\n        <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n          {values.isSelected && (\n            <DotFilledIcon className=\"h-4 w-4 fill-current\" />\n          )}\n        </span>\n        {typeof children === \"function\" ? children(values) : children}\n      </>\n    )}\n  </Item>\n))\nDropdownMenuRadioItem.displayName = \"DropdownMenuRadioItem\"\n\nconst DropdownMenuHeader = React.forwardRef<\n  React.ElementRef<typeof Header>,\n  React.ComponentPropsWithoutRef<typeof Header> & {\n    inset?: boolean\n    separator?: boolean\n  }\n>(({ className, inset, separator = false, ...props }, ref) => (\n  <Header\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      separator && \"-mx-1 mb-1 border-b border-b-border px-3 pb-[0.625rem]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuHeader.displayName = \"DropdownMenuHeader\"\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentPropsWithoutRef<typeof Separator>\n>(({ className, ...props }, ref) => (\n  <Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = \"Separator\"\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <Keyboard\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuHeader,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuPopover,\n  DropdownMenuSection,\n}\n"
    }
  ],
  "type": "components:ui"
}