{
  "name": "slider",
  "files": [
    {
      "name": "slider.tsx",
      "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport {\r\n  Slider,\r\n  SliderOutput,\r\n  SliderProps,\r\n  SliderStateContext,\r\n  SliderThumb,\r\n  SliderThumbProps,\r\n  SliderTrack,\r\n  SliderTrackProps,\r\n} from \"react-aria-components\"\r\n\r\nimport { cn, cnv } from \"@/lib/utils\"\r\n\r\nconst _SliderOutput = SliderOutput\r\n\r\nconst _Slider = ({\r\n  className,\r\n  orientation = \"horizontal\",\r\n  ...props\r\n}: SliderProps) => (\r\n  <Slider\r\n    className={(values) =>\r\n      cnv(\r\n        values,\r\n        \"relative flex touch-none select-none items-center\",\r\n        {\r\n          \"h-full\": orientation === \"vertical\",\r\n          \"w-full\": orientation === \"horizontal\",\r\n        },\r\n        className\r\n      )\r\n    }\r\n    orientation={orientation}\r\n    {...props}\r\n  />\r\n)\r\n\r\nconst _SliderTrack = ({ className, ...props }: SliderTrackProps) => (\r\n  <SliderTrack\r\n    className={(values) =>\r\n      cnv(\r\n        values,\r\n        {\r\n          \"h-1.5 w-full\": values.orientation === \"horizontal\",\r\n          \"h-full w-1.5\": values.orientation === \"vertical\",\r\n        },\r\n        \"relative grow rounded-full bg-primary/20\",\r\n        className\r\n      )\r\n    }\r\n    {...props}\r\n  />\r\n)\r\n\r\nconst _SliderFillTrack = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => {\r\n  let state = React.useContext(SliderStateContext)!\r\n  const orientation = state.orientation === \"vertical\" ? \"height\" : \"width\"\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      style={{ [orientation]: state.getThumbPercent(0) * 100 + \"%\" }}\r\n      className={cn(\r\n        \"absolute rounded-full bg-primary\",\r\n        {\r\n          \"h-full\": state.orientation === \"horizontal\",\r\n          \"w-full bottom-0\": state.orientation === \"vertical\",\r\n        },\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\n_SliderFillTrack.displayName = \"SliderFillTrack\"\r\n\r\nconst _SliderThumb = ({ className }: SliderThumbProps) => (\r\n  <SliderThumb\r\n    className={(values) =>\r\n      cnv(\r\n        values,\r\n        \"left-[50%] top-[50%] block h-4 w-4 rounded-full border border-primary/50 bg-background shadow transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\r\n        className\r\n      )\r\n    }\r\n  />\r\n)\r\n\r\nexport {\r\n  _Slider as Slider,\r\n  _SliderTrack as SliderTrack,\r\n  _SliderFillTrack as SliderFillTrack,\r\n  _SliderThumb as SliderThumb,\r\n  _SliderOutput as SliderOutput,\r\n}\r\n"
    }
  ],
  "type": "components:ui"
}