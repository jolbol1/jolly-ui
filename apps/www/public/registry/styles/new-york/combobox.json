{
  "name": "combobox",
  "files": [
    {
      "name": "combobox.tsx",
      "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { CaretSortIcon, CheckIcon } from \"@radix-ui/react-icons\"\r\nimport {\r\n  Button,\r\n  Collection,\r\n  ComboBox,\r\n  Group,\r\n  Header,\r\n  Input,\r\n  Item,\r\n  ListBox,\r\n  Popover,\r\n  Section,\r\n  Separator,\r\n} from \"react-aria-components\"\r\n\r\nimport { cn, cnv } from \"@/lib/utils\"\r\n\r\nconst Combobox = ComboBox\r\n\r\nconst ComboboxSection = Section\r\n\r\nconst ComboboxCollection = Collection\r\n\r\nconst ComboboxInput = React.forwardRef<\r\n  React.ElementRef<typeof Input>,\r\n  React.ComponentPropsWithoutRef<typeof Input>\r\n>(({ className, ...props }, ref) => (\r\n  <Group\r\n    className={cn(\r\n      \"flex h-9 w-full items-center justify-between overflow-hidden rounded-md border border-input bg-transparent  text-sm shadow-sm ring-offset-background placeholder:text-muted-foreground focus-within:outline-none focus-within:ring-1 focus-within:ring-ring data-[disabled]:cursor-not-allowed data-[disabled]:opacity-50\"\r\n    )}\r\n  >\r\n    <Input\r\n      className={(values) =>\r\n        cnv(\r\n          values,\r\n          \"flex w-full bg-background px-3 py-2 text-sm placeholder:text-muted-foreground data-[focused]:outline-none data-[disabled]:cursor-not-allowed data-[disabled]:opacity-50\",\r\n          className\r\n        )\r\n      }\r\n      ref={ref}\r\n      {...props}\r\n    />\r\n    <Button className=\"pr-3\">\r\n      <CaretSortIcon aria-hidden=\"true\" className=\"h-4 w-4 opacity-50\" />\r\n    </Button>\r\n  </Group>\r\n))\r\nComboboxInput.displayName = \"ComboboxInput\"\r\n\r\nconst ComboboxPopover = React.forwardRef<\r\n  React.ElementRef<typeof Popover>,\r\n  React.ComponentPropsWithoutRef<typeof Popover>\r\n>(({ className, ...props }, ref) => (\r\n  <Popover\r\n    ref={ref}\r\n    className={(values) =>\r\n      cnv(\r\n        values,\r\n        \"relative z-50 w-[--trigger-width] min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[entering]:animate-in data-[exiting]:animate-out data-[entering]:fade-in-0 data-[exiting]:fade-out-0 data-[exiting]:zoom-out-95 data-[placement=bottom]:slide-in-from-top-2 data-[placement=left]:slide-in-from-right-2 data-[placement=right]:slide-in-from-left-2 data-[placement=top]:slide-in-from-bottom-2\",\r\n        \"data-[placement=bottom]:translate-y-1 data-[placement=left]:-translate-x-1 data-[placement=right]:translate-x-1 data-[placement=top]:-translate-y-1\",\r\n        className\r\n      )\r\n    }\r\n    {...props}\r\n  />\r\n))\r\nComboboxPopover.displayName = \"ComboboxPopover\"\r\n\r\nconst ComboboxListBox = React.forwardRef<\r\n  React.ElementRef<typeof ListBox>,\r\n  React.ComponentPropsWithoutRef<typeof ListBox>\r\n>(({ className, ...props }, ref) => (\r\n  <ListBox ref={ref} className={cn(\"p-1\")} {...props} />\r\n))\r\nComboboxListBox.displayName = \"ComboboxListBox\"\r\n\r\nconst ComboboxLabel = React.forwardRef<\r\n  React.ElementRef<typeof Header>,\r\n  React.ComponentPropsWithoutRef<typeof Header> & { separator?: boolean }\r\n>(({ className, separator = false, ...props }, ref) => (\r\n  <Header\r\n    ref={ref}\r\n    className={cn(\r\n      \"px-2 py-1.5 text-sm font-semibold\",\r\n      { \"-mx-1 mb-1 border-b border-b-border px-3 pb-[0.625rem]\": separator },\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nComboboxLabel.displayName = \"ComboboxLabel\"\r\n\r\nconst ComboboxItem = React.forwardRef<\r\n  React.ElementRef<typeof Item>,\r\n  React.ComponentPropsWithoutRef<typeof Item>\r\n>(({ className, children, ...props }, ref) => (\r\n  <Item\r\n    ref={ref}\r\n    className={(values) =>\r\n      cnv(\r\n        values,\r\n        \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none data-[focused]:bg-accent data-[focused]:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n        className\r\n      )\r\n    }\r\n    {...props}\r\n  >\r\n    {(values) => (\r\n      <>\r\n        {values.isSelected && (\r\n          <span className=\"absolute right-2 flex h-4 w-4 items-center justify-center\">\r\n            <CheckIcon className=\"h-4 w-4\" />\r\n          </span>\r\n        )}\r\n        {typeof children === \"function\" ? children(values) : children}\r\n      </>\r\n    )}\r\n  </Item>\r\n))\r\nComboboxItem.displayName = \"ComboboxItem\"\r\n\r\nconst ComboboxSeparator = React.forwardRef<\r\n  React.ElementRef<typeof Separator>,\r\n  React.ComponentPropsWithoutRef<typeof Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\r\n    {...props}\r\n  />\r\n))\r\nComboboxSeparator.displayName = \"ComboboxSeparator\"\r\n\r\nexport {\r\n  ComboboxSection,\r\n  Combobox,\r\n  ComboboxInput,\r\n  ComboboxListBox,\r\n  ComboboxPopover,\r\n  ComboboxCollection,\r\n  ComboboxLabel,\r\n  ComboboxItem,\r\n  ComboboxSeparator,\r\n}\r\n"
    }
  ],
  "type": "components:ui"
}