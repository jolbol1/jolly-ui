{
  "name": "combobox",
  "files": [
    {
      "name": "combobox.tsx",
      "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { CaretSortIcon, CheckIcon } from \"@radix-ui/react-icons\"\r\nimport {\r\n  Button,\r\n  ComboBox,\r\n  Header,\r\n  Input,\r\n  Item,\r\n  ListBox,\r\n  Popover,\r\n  Section,\r\n  Separator,\r\n} from \"react-aria-components\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Combobox = ComboBox\r\n\r\nconst ComboboxGroup = Section\r\n\r\nconst ComboboxInput = React.forwardRef<\r\n  React.ElementRef<typeof Input>,\r\n  React.ComponentPropsWithoutRef<typeof Input>\r\n>(({ className, children, ...props }, ref) => (\r\n  <div\r\n    className={cn(\r\n      \"flex h-9 w-full items-center justify-between rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background placeholder:text-muted-foreground focus-within:outline-none focus-within:ring-1 focus-within:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\r\n      className\r\n    )}\r\n  >\r\n    <Input\r\n      className=\"flex w-full bg-background text-sm placeholder:text-muted-foreground focus-visible:outline-none disabled:cursor-not-allowed disabled:opacity-50\"\r\n      ref={ref}\r\n      {...props}\r\n    />\r\n    <Button>\r\n      <CaretSortIcon className=\"h-4 w-4 opacity-50\" />\r\n    </Button>\r\n  </div>\r\n))\r\nComboboxInput.displayName = \"ComboboxInput\"\r\n\r\nconst ComboboxContent = React.forwardRef<\r\n  React.ElementRef<typeof Popover>,\r\n  React.ComponentPropsWithoutRef<typeof Popover>\r\n>(({ className, offset = 0, children, ...props }, ref) => (\r\n  <Popover\r\n    offset={offset}\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative z-50  min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[entering]:animate-in data-[exiting]:animate-out data-[entering]:fade-in-0 data-[exiting]:fade-out-0 data-[entering]:zoom-in-95 data-[exiting]:zoom-out-95 data-[placement=bottom]:slide-in-from-top-2 data-[placement=left]:slide-in-from-right-2 data-[placement=right]:slide-in-from-left-2 data-[placement=top]:slide-in-from-bottom-2\",\r\n      \"data-[placement=bottom]:translate-y-1 data-[placement=left]:-translate-x-1 data-[placement=right]:translate-x-1 data-[placement=top]:-translate-y-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ListBox className={cn(\"p-1\")}>{children}</ListBox>\r\n  </Popover>\r\n))\r\nComboboxContent.displayName = \"ComboboxContent\"\r\n\r\nconst ComboboxLabel = React.forwardRef<\r\n  React.ElementRef<typeof Header>,\r\n  React.ComponentPropsWithoutRef<typeof Header> & { separator?: boolean }\r\n>(({ className, separator = false, ...props }, ref) => (\r\n  <Header\r\n    ref={ref}\r\n    className={cn(\r\n      \"px-2 py-1.5 text-sm font-semibold\",\r\n      { \"-mx-1 mb-1 border-b border-b-border px-3 pb-[0.625rem]\": separator },\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nComboboxLabel.displayName = \"ComboboxLabel\"\r\n\r\nconst ComboboxItem = React.forwardRef<\r\n  React.ElementRef<typeof Item>,\r\n  React.ComponentPropsWithoutRef<typeof Item>\r\n>(({ className, children, ...props }, ref) => (\r\n  <Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {({ isSelected }) => (\r\n      <>\r\n        {isSelected && (\r\n          <span className=\"absolute right-2 flex h-4 w-4 items-center justify-center\">\r\n            <CheckIcon className=\"h-4 w-4\" />\r\n          </span>\r\n        )}\r\n        {children}\r\n      </>\r\n    )}\r\n  </Item>\r\n))\r\nComboboxItem.displayName = \"ComboboxItem\"\r\n\r\nconst ComboboxSeparator = React.forwardRef<\r\n  React.ElementRef<typeof Separator>,\r\n  React.ComponentPropsWithoutRef<typeof Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\r\n    {...props}\r\n  />\r\n))\r\nComboboxSeparator.displayName = \"ComboboxSeparator\"\r\n\r\nexport {\r\n  ComboboxGroup,\r\n  ComboBox as Combobox,\r\n  ComboboxInput,\r\n  ComboboxContent,\r\n  ComboboxLabel,\r\n  ComboboxItem,\r\n  ComboboxSeparator,\r\n}\r\n"
    }
  ],
  "type": "components:ui"
}