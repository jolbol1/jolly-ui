{
  "name": "calendar",
  "dependencies": [
    "react-day-picker",
    "date-fns"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "name": "calendar.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { getLocalTimeZone, today } from \"@internationalized/date\"\nimport { ChevronLeftIcon, ChevronRightIcon } from \"@radix-ui/react-icons\"\nimport {\n  Button,\n  Calendar,\n  CalendarCell,\n  CalendarCellProps,\n  CalendarGrid,\n  CalendarGridBody,\n  CalendarGridBodyProps,\n  CalendarGridHeader,\n  CalendarGridHeaderProps,\n  CalendarGridProps,\n  CalendarHeaderCell,\n  CalendarHeaderCellProps,\n  Heading,\n} from \"react-aria-components\"\n\nimport { cn, cnv } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/registry/default/ui/button-variants\"\n\nconst _Calendar = Calendar\n\nconst _CalendarHeading = ({\n  ...props\n}: React.HTMLAttributes<HTMLHeadElement>) => (\n  <header className=\"relative flex items-center justify-center pt-1\" {...props}>\n    <Heading className=\"text-sm font-medium\" />\n    <div className=\"flex items-center\">\n      <Button\n        slot=\"next\"\n        className={cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 data-[hovered]:opacity-100\",\n          \"absolute right-1 text-popover-foreground\"\n        )}\n      >\n        <ChevronRightIcon className=\"h-4 w-4\" />\n      </Button>\n      <Button\n        slot=\"previous\"\n        className={cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 data-[hovered]:opacity-100\",\n          \"absolute left-1 text-popover-foreground\"\n        )}\n      >\n        <ChevronLeftIcon className=\"h-4 w-4\" />\n      </Button>\n    </div>\n  </header>\n)\n\nconst _CalendarGrid = ({ className, ...props }: CalendarGridProps) => (\n  <CalendarGrid\n    className={cn(\"mt-4 w-full border-collapse space-y-1\", className)}\n    {...props}\n  />\n)\n\nconst _CalendarGridHeader = ({\n  className,\n  ...props\n}: CalendarGridHeaderProps) => (\n  <CalendarGridHeader className={cn(\"[&>tr]:flex\", className)} {...props} />\n)\n\nconst _CalendarHeaderCell = ({\n  className,\n  ...props\n}: CalendarHeaderCellProps) => (\n  <CalendarHeaderCell\n    className={cn(\n      \"w-8 rounded-md text-[0.8rem] font-normal text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst _CalendarGridBody = ({ className, ...props }: CalendarGridBodyProps) => (\n  <CalendarGridBody\n    className={cn(\n      \"[&>tr>td]:p-0 [&>tr]:mt-2 [&>tr]:flex [&>tr]:w-full\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst _CalendarCell = ({ className, date, ...props }: CalendarCellProps) => (\n  <CalendarCell\n    className={(values) =>\n      cnv(\n        values,\n        buttonVariants({ variant: \"ghost\" }),\n        \"h-8 w-8 p-0 font-normal data-[selected]:opacity-100\",\n        date.compare(today(getLocalTimeZone())) === 0 &&\n          \"bg-accent text-accent-foreground\",\n        values.isDisabled && \"text-muted-foreground opacity-50\",\n        values.isSelected &&\n          \"bg-primary text-primary-foreground data-[hovered]:bg-primary data-[hovered]:text-primary-foreground data-[focused]:bg-primary data-[focused]:text-primary-foreground\",\n        values.isOutsideMonth &&\n          \"text-muted-foreground opacity-50 data-[selected]:bg-accent/50 data-[selected]:text-muted-foreground data-[selected]:opacity-30\",\n        className\n      )\n    }\n    date={date}\n    {...props}\n  />\n)\n\nexport {\n  _Calendar as Calendar,\n  _CalendarCell as CalendarCell,\n  _CalendarGrid as CalendarGrid,\n  _CalendarGridBody as CalendarGridBody,\n  _CalendarGridHeader as CalendarGridHeader,\n  _CalendarHeaderCell as CalendarHeaderCell,\n  _CalendarHeading as CalendarHeading,\n}\n"
    }
  ],
  "type": "components:ui"
}