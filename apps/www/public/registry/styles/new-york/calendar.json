{
  "name": "calendar",
  "dependencies": [
    "react-day-picker",
    "date-fns"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "name": "calendar.tsx",
      "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { getLocalTimeZone, today } from \"@internationalized/date\"\r\nimport { ChevronLeftIcon, ChevronRightIcon } from \"@radix-ui/react-icons\"\r\nimport {\r\n  Button,\r\n  Calendar,\r\n  CalendarCell,\r\n  CalendarCellProps,\r\n  CalendarGrid,\r\n  CalendarGridBody,\r\n  CalendarGridBodyProps,\r\n  CalendarGridHeader,\r\n  CalendarGridHeaderProps,\r\n  CalendarGridProps,\r\n  CalendarHeaderCell,\r\n  CalendarHeaderCellProps,\r\n  Heading,\r\n} from \"react-aria-components\"\r\n\r\nimport { cn, cnv } from \"@/lib/utils\"\r\nimport { buttonVariants } from \"@/registry/new-york/ui/button-variants\"\r\n\r\nconst _Calendar = Calendar\r\n\r\nconst _CalendarHeading = ({\r\n  ...props\r\n}: React.HTMLAttributes<HTMLHeadElement>) => (\r\n  <header className=\"relative flex items-center justify-center pt-1\" {...props}>\r\n    <Heading className=\"text-sm font-medium\" />\r\n    <div className=\"flex items-center\">\r\n      <Button\r\n        slot=\"next\"\r\n        className={cn(\r\n          buttonVariants({ variant: \"outline\" }),\r\n          \"h-7 w-7 bg-transparent p-0 opacity-50 data-[hovered]:opacity-100\",\r\n          \"absolute right-1 text-popover-foreground\"\r\n        )}\r\n      >\r\n        <ChevronRightIcon className=\"h-4 w-4\" />\r\n      </Button>\r\n      <Button\r\n        slot=\"previous\"\r\n        className={cn(\r\n          buttonVariants({ variant: \"outline\" }),\r\n          \"h-7 w-7 bg-transparent p-0 opacity-50 data-[hovered]:opacity-100\",\r\n          \"absolute left-1 text-popover-foreground\"\r\n        )}\r\n      >\r\n        <ChevronLeftIcon className=\"h-4 w-4\" />\r\n      </Button>\r\n    </div>\r\n  </header>\r\n)\r\n\r\nconst _CalendarGrid = ({ className, ...props }: CalendarGridProps) => (\r\n  <CalendarGrid\r\n    className={cn(\"mt-4 w-full border-collapse space-y-1\", className)}\r\n    {...props}\r\n  />\r\n)\r\n\r\nconst _CalendarGridHeader = ({\r\n  className,\r\n  ...props\r\n}: CalendarGridHeaderProps) => (\r\n  <CalendarGridHeader className={cn(\"[&>tr]:flex\", className)} {...props} />\r\n)\r\n\r\nconst _CalendarHeaderCell = ({\r\n  className,\r\n  ...props\r\n}: CalendarHeaderCellProps) => (\r\n  <CalendarHeaderCell\r\n    className={cn(\r\n      \"w-8 rounded-md text-[0.8rem] font-normal text-muted-foreground\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\n\r\nconst _CalendarGridBody = ({ className, ...props }: CalendarGridBodyProps) => (\r\n  <CalendarGridBody\r\n    className={cn(\r\n      \"[&>tr>td]:p-0 [&>tr]:mt-2 [&>tr]:flex [&>tr]:w-full\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\n\r\nconst _CalendarCell = ({ className, date, ...props }: CalendarCellProps) => (\r\n  <CalendarCell\r\n    className={(values) =>\r\n      cnv(\r\n        values,\r\n        \"data-[hovered]:bg-accent data-[hovered]:text-accent-foreground inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n        \"h-8 w-8 p-0 font-normal data-[selected]:opacity-100\",\r\n        date.compare(today(getLocalTimeZone())) === 0 &&\r\n          \"bg-accent text-accent-foreground\",\r\n        values.isDisabled && \"text-muted-foreground opacity-50\",\r\n        values.isFocusVisible &&\r\n          values.isFocused &&\r\n          \"outline-none ring-2 ring-ring ring-offset-2\",\r\n        values.isSelected &&\r\n          \"bg-primary text-primary-foreground data-[hovered]:bg-primary data-[hovered]:text-primary-foreground data-[focused]:bg-primary data-[focused]:text-primary-foreground\",\r\n        values.isOutsideMonth &&\r\n          \"text-muted-foreground opacity-50 data-[selected]:bg-accent/50 data-[selected]:text-muted-foreground data-[selected]:opacity-30\",\r\n        className\r\n      )\r\n    }\r\n    date={date}\r\n    {...props}\r\n  />\r\n)\r\n\r\nexport {\r\n  _Calendar as Calendar,\r\n  _CalendarCell as CalendarCell,\r\n  _CalendarGrid as CalendarGrid,\r\n  _CalendarGridBody as CalendarGridBody,\r\n  _CalendarGridHeader as CalendarGridHeader,\r\n  _CalendarHeaderCell as CalendarHeaderCell,\r\n  _CalendarHeading as CalendarHeading,\r\n}\r\n"
    }
  ],
  "type": "components:ui"
}