{
  "name": "sheet",
  "dependencies": [
    "react-aria-components"
  ],
  "files": [
    {
      "name": "sheet.tsx",
      "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\nimport { X } from \"lucide-react\"\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogProps,\r\n  DialogTrigger,\r\n  Heading,\r\n  HeadingProps,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalOverlayProps,\r\n} from \"react-aria-components\"\r\n\r\nimport { cn, cnv } from \"@/lib/utils\"\r\n\r\nconst sheetVariants = cva(\r\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[entering]:animate-in data-[exiting]:animate-out data-[exiting]:duration-300 data-[entering]:duration-500\",\r\n  {\r\n    variants: {\r\n      side: {\r\n        top: \"inset-x-0 top-0 border-b data-[exiting]:slide-out-to-top data-[entering]:slide-in-from-top\",\r\n        bottom:\r\n          \"inset-x-0 bottom-0 border-t data-[exiting]:slide-out-to-bottom data-[entering]:slide-in-from-bottom\",\r\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[exiting]:slide-out-to-left data-[entering]:slide-in-from-left sm:max-w-sm\",\r\n        right:\r\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[exiting]:slide-out-to-right data-[entering]:slide-in-from-right sm:max-w-sm\",\r\n      },\r\n    },\r\n  }\r\n)\r\n\r\nconst _DialogTrigger = DialogTrigger\r\n\r\nconst _DialogOverlay = ({\r\n  className,\r\n  isDismissable = true,\r\n  ...props\r\n}: ModalOverlayProps) => (\r\n  <ModalOverlay\r\n    isDismissable={isDismissable}\r\n    className={(values) =>\r\n      cnv(\r\n        values,\r\n        \"fixed inset-0 z-50 bg-background/80 backdrop-blur-sm data-[entering]:animate-in data-[exiting]:animate-out data-[entering]:fade-in-0 data-[exiting]:fade-out-0\",\r\n        className\r\n      )\r\n    }\r\n    {...props}\r\n  />\r\n)\r\n\r\nexport interface DialogContentProps\r\n  extends Omit<React.ComponentPropsWithoutRef<typeof Modal>, \"children\">,\r\n    VariantProps<typeof sheetVariants> {\r\n  children?: DialogProps[\"children\"]\r\n  role?: DialogProps[\"role\"]\r\n  closeButton?: boolean\r\n}\r\n\r\nconst DialogContent = ({\r\n  className,\r\n  children,\r\n  side,\r\n  role,\r\n  closeButton = true,\r\n  ...props\r\n}: DialogContentProps) => (\r\n  <Modal\r\n    className={cn(\r\n      !side &&\r\n        \"fixed left-[50%] top-[50%] z-50 w-full max-w-lg translate-x-[-50%] translate-y-[-50%] border bg-background p-6 shadow-lg duration-200 data-[entering]:animate-in data-[exiting]:animate-out data-[entering]:fade-in-0 data-[exiting]:fade-out-0 data-[entering]:zoom-in-95 data-[exiting]:zoom-out-95 data-[entering]:slide-in-from-left-1/2 data-[entering]:slide-in-from-top-[48%] data-[exiting]:slide-out-to-left-1/2 data-[exiting]:slide-out-to-top-[48%] sm:rounded-lg md:w-full\",\r\n      side && sheetVariants({ side }),\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <Dialog role={role} className=\"grid h-full gap-4 outline-none\">\r\n      {(values) => (\r\n        <>\r\n          {typeof children === \"function\" ? children(values) : children}\r\n          {closeButton && (\r\n            <Button\r\n              onPress={values.close}\r\n              className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[entering]:bg-accent data-[entering]:text-muted-foreground\"\r\n            >\r\n              <X className=\"h-4 w-4\" />\r\n              <span className=\"sr-only\">Close</span>\r\n            </Button>\r\n          )}\r\n        </>\r\n      )}\r\n    </Dialog>\r\n  </Modal>\r\n)\r\n\r\nconst DialogHeader = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\n\r\nconst DialogFooter = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\n\r\nconst DialogTitle = ({ className, ...props }: HeadingProps) => (\r\n  <Heading\r\n    slot=\"title\"\r\n    className={cn(\r\n      \"text-lg font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\n\r\nexport {\r\n  _DialogOverlay as DialogOverlay,\r\n  _DialogTrigger as DialogTrigger,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogFooter,\r\n  DialogTitle,\r\n}\r\n"
    }
  ],
  "type": "components:ui"
}