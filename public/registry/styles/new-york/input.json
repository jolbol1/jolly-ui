{
  "name": "input",
  "dependencies": [
    "react-aria-components"
  ],
  "files": [
    {
      "name": "input.tsx",
      "content": "import * as React from \"react\"\nimport {\n  Input as AriaInput,\n  InputProps as AriaInputProps,\n  TextArea as AriaTextArea,\n  TextAreaProps as AriaTextAreaProps,\n  TextField as AriaTextField,\n  TextFieldProps as AriaTextFieldProps,\n  ValidationResult as AriaValidationResult,\n  composeRenderProps,\n  Text,\n} from \"react-aria-components\"\n\nimport { cn } from \"@/lib/utils\"\n\nimport { FieldError, Label } from \"./field\"\n\nconst TextField = AriaTextField\n\nconst Input = ({ className, ...props }: AriaInputProps) => {\n  return (\n    <AriaInput\n      className={composeRenderProps(className, (className) =>\n        cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground\",\n          /* Disabled */\n          \"data-[disabled]:cursor-not-allowed data-[disabled]:opacity-50\",\n          /* Focused */\n          \"data-[focused]:outline-none data-[focused]:ring-1 data-[focused]:ring-ring\",\n          /* Resets */\n          \"focus-visible:outline-none\",\n          className\n        )\n      )}\n      {...props}\n    />\n  )\n}\n\nconst TextArea = ({ className, ...props }: AriaTextAreaProps) => {\n  return (\n    <AriaTextArea\n      className={composeRenderProps(className, (className) =>\n        cn(\n          \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground\",\n          /* Focused */\n          \"data-[focused]:outline-none data-[focused]:ring-2 data-[focused]:ring-ring data-[focused]:ring-offset-2\",\n          /* Disabled */\n          \"data-[disabled]:cursor-not-allowed data-[disabled]:opacity-50\",\n          /* Resets */\n          \"focus-visible:outline-none\",\n          className\n        )\n      )}\n      {...props}\n    />\n  )\n}\n\ninterface JollyTextFieldProps extends AriaTextFieldProps {\n  label?: string\n  description?: string\n  errorMessage?: string | ((validation: AriaValidationResult) => string)\n  textArea?: boolean\n}\n\nfunction JollyTextField({\n  label,\n  description,\n  errorMessage,\n  textArea,\n  className,\n  ...props\n}: JollyTextFieldProps) {\n  return (\n    <TextField\n      className={composeRenderProps(className, (className) =>\n        cn(\"group flex flex-col gap-2\", className)\n      )}\n      {...props}\n    >\n      <Label>{label}</Label>\n      {textArea ? <TextArea /> : <Input />}\n      {description && (\n        <Text className=\"text-sm text-muted-foreground\" slot=\"description\">\n          {description}\n        </Text>\n      )}\n      <FieldError>{errorMessage}</FieldError>\n    </TextField>\n  )\n}\n\nexport { Input, TextField, JollyTextField, TextArea }\n"
    }
  ],
  "type": "components:ui"
}