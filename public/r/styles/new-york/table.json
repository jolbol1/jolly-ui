{
  "name": "table",
  "type": "registry:ui",
  "dependencies": [
    "react-aria-components"
  ],
  "files": [
    {
      "path": "ui/table.tsx",
      "content": "import { CaretSortIcon } from \"@radix-ui/react-icons\"\nimport {\n  Cell as AriaCell,\n  Column as AriaColumn,\n  ColumnProps as AriaColumnProps,\n  ResizableTableContainer as AriaResizableTableContainer,\n  Row as AriaRow,\n  Table as AriaTable,\n  TableBody as AriaTableBody,\n  TableHeader as AriaTableHeader,\n  CellProps,\n  ColumnResizer,\n  Group,\n  ResizableTableContainerProps,\n  RowProps,\n  TableBodyProps,\n  TableHeaderProps,\n  TableProps,\n  composeRenderProps,\n} from \"react-aria-components\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizableTableContainer = AriaResizableTableContainer\n\nconst Table = ({ className, ...props }: TableProps) => (\n  <AriaTable\n    className={composeRenderProps(className, (className) =>\n      cn(\"w-full caption-bottom text-sm\", className)\n    )}\n    {...props}\n  />\n)\n\nconst TableHeader = <T extends object>({\n  className,\n  ...props\n}: TableHeaderProps<T>) => (\n  <AriaTableHeader\n    className={composeRenderProps(className, (className) =>\n      cn(\"[&_tr]:border-b\", className)\n    )}\n    {...props}\n  />\n)\n\nexport interface ColumnProps extends AriaColumnProps {\n  isResizable?: boolean\n}\n\nconst Column = ({ className, children, ...props }: ColumnProps) => (\n  <AriaColumn\n    className={composeRenderProps(className, (className) =>\n      cn(\n        \"h-10 px-2 text-left align-middle font-medium text-muted-foreground [&:has([slot=selection])]:pr-0 [&>[slot=selection]]:translate-y-[2px]\",\n        className\n      )\n    )}\n    {...props}\n  >\n    {composeRenderProps(children, (children, { allowsSorting }) => (\n      <div className=\"flex items-center\">\n        <Group\n          role=\"presentation\"\n          tabIndex={-1}\n          className={cn(\n            \"flex h-9 flex-1 items-center gap-1 overflow-hidden \",\n            allowsSorting &&\n              \"rounded-md p-2 px-4 data-[hovered]:bg-accent data-[hovered]:text-accent-foreground\"\n          )}\n        >\n          <span className=\"truncate\">{children}</span>\n          {allowsSorting && <CaretSortIcon className=\"ml-2 size-4\" />}\n        </Group>\n        {props.isResizable && (\n          <ColumnResizer className=\"box-content h-5 w-px translate-x-[8px] cursor-col-resize rounded bg-gray-400 bg-clip-content px-[8px] py-1 -outline-offset-2 data-[resizing]:w-[2px] data-[resizing]:bg-blue-600 data-[resizing]:pl-[7px] dark:bg-zinc-500 forced-colors:bg-border forced-colors:data-[resizing]:bg-[Highlight]\" />\n        )}\n      </div>\n    ))}\n  </AriaColumn>\n)\n\nconst TableBody = <T extends object>({\n  className,\n  ...props\n}: TableBodyProps<T>) => (\n  <AriaTableBody\n    className={composeRenderProps(className, (className) =>\n      cn(\"[&_tr:last-child]:border-0\", className)\n    )}\n    {...props}\n  />\n)\n\nconst Row = <T extends object>({ className, ...props }: RowProps<T>) => (\n  <AriaRow\n    className={composeRenderProps(className, (className) =>\n      cn(\n        \"border-b transition-colors data-[hovered]:bg-muted/50 data-[selected]:bg-muted\",\n        className\n      )\n    )}\n    {...props}\n  />\n)\n\nconst Cell = ({ className, ...props }: CellProps) => (\n  <AriaCell\n    className={composeRenderProps(className, (className) =>\n      cn(\n        \"p-2 align-middle [&:has([slot=selection])]:pr-0 [&>[slot=selection]]:translate-y-[2px]\",\n        className\n      )\n    )}\n    {...props}\n  />\n)\n\nexport {\n  Table,\n  TableHeader,\n  Column,\n  TableBody,\n  Row,\n  Cell,\n  ResizableTableContainer,\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}