{
  "name": "table",
  "type": "registry:ui",
  "dependencies": [
    "react-aria-components"
  ],
  "files": [
    {
      "path": "ui/table.tsx",
      "content": "\"use client\"\n\nimport { ArrowUpDown } from \"lucide-react\"\nimport {\n  Cell as AriaCell,\n  Column as AriaColumn,\n  ColumnProps as AriaColumnProps,\n  ResizableTableContainer as AriaResizableTableContainer,\n  Row as AriaRow,\n  Table as AriaTable,\n  TableBody as AriaTableBody,\n  TableHeader as AriaTableHeader,\n  CellProps,\n  ColumnResizer,\n  Group,\n  ResizableTableContainerProps,\n  RowProps,\n  TableBodyProps,\n  TableHeaderProps,\n  TableProps,\n  composeRenderProps,\n} from \"react-aria-components\"\n\nimport { cn } from \"@/lib/utils\"\n\nimport { buttonVariants } from \"./button\"\n\nconst ResizableTableContainer = AriaResizableTableContainer\n\nconst Table = ({ className, ...props }: TableProps) => (\n  <AriaTable\n    className={composeRenderProps(className, (className) =>\n      cn(\n        \"w-full caption-bottom text-sm -outline-offset-2 data-[focus-visible]:outline-ring\",\n        className\n      )\n    )}\n    {...props}\n  />\n)\n\nconst TableHeader = <T extends object>({\n  className,\n  ...props\n}: TableHeaderProps<T>) => (\n  <AriaTableHeader\n    className={composeRenderProps(className, (className) =>\n      cn(\"[&_tr]:border-b\", className)\n    )}\n    {...props}\n  />\n)\n\nexport interface ColumnProps extends AriaColumnProps {\n  isResizable?: boolean\n}\n\nconst Column = ({ className, children, ...props }: ColumnProps) => (\n  <AriaColumn\n    className={composeRenderProps(className, (className) =>\n      cn(\n        \"h-12 text-left align-middle font-medium text-muted-foreground -outline-offset-2 data-[focus-visible]:outline-ring\",\n        className\n      )\n    )}\n    {...props}\n  >\n    {composeRenderProps(children, (children, { allowsSorting }) => (\n      <div className=\"flex items-center\">\n        <Group\n          role=\"presentation\"\n          tabIndex={-1}\n          className={cn(\n            \"flex h-10 flex-1 items-center gap-1 overflow-hidden rounded-md px-4\",\n            allowsSorting &&\n              \"p-2 data-[hovered]:bg-accent data-[hovered]:text-accent-foreground\",\n            \"focus-visible:outline-none  data-[focus-visible]:-outline-offset-2 data-[focus-visible]:outline-ring [&:has([slot=selection])]:pr-0\"\n          )}\n        >\n          <span className=\"truncate\">{children}</span>\n          {allowsSorting && <ArrowUpDown className=\"ml-2 size-4\" />}\n        </Group>\n        {props.isResizable && (\n          <ColumnResizer className=\"data-[focus-visible]:ring-rin box-content h-5 w-px translate-x-[8px] cursor-col-resize rounded bg-muted-foreground bg-clip-content px-[8px]  py-1 focus-visible:outline-none data-[resizing]:w-[2px] data-[resizing]:bg-primary data-[resizing]:pl-[7px] data-[focus-visible]:ring-1  data-[focus-visible]:ring-ring\" />\n        )}\n      </div>\n    ))}\n  </AriaColumn>\n)\n\nconst TableBody = <T extends object>({\n  className,\n  ...props\n}: TableBodyProps<T>) => (\n  <AriaTableBody\n    className={composeRenderProps(className, (className) =>\n      cn(\n        \"-outline-offset-2 data-[empty]:h-24 data-[empty]:text-center data-[focus-visible]:outline-ring [&_tr:last-child]:border-0\",\n        className\n      )\n    )}\n    {...props}\n  />\n)\n\nconst Row = <T extends object>({ className, ...props }: RowProps<T>) => (\n  <AriaRow\n    className={composeRenderProps(className, (className) =>\n      cn(\n        \"border-b -outline-offset-2 transition-colors data-[hovered]:bg-muted/50 data-[selected]:bg-muted data-[focus-visible]:outline-ring\",\n        className\n      )\n    )}\n    {...props}\n  />\n)\n\nconst Cell = ({ className, ...props }: CellProps) => (\n  <AriaCell\n    className={composeRenderProps(className, (className) =>\n      cn(\n        \"p-4 align-middle -outline-offset-2 data-[focus-visible]:outline-ring [&:has([role=checkbox])]:pr-0\",\n        className\n      )\n    )}\n    {...props}\n  />\n)\n\nexport {\n  Table,\n  TableHeader,\n  Column,\n  TableBody,\n  Row,\n  Cell,\n  ResizableTableContainer,\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}